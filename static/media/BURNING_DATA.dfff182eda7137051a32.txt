
<html>
<head>
<title></title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="format-detection" content="telephone=no">
<meta name="robots" content="noindex, nofollow">
<link rel="stylesheet" href="/assets/vendor/font-awesome/css/fontawesome-all.min.css?v=22.4.3.0">
<link rel="stylesheet" href="/assets/css/theme.min.css?v=22.4.3.0">
<link rel="stylesheet" href="/assets/css/custom.css?v=22.4.3.0">
<script src="/assets/vendor/jquery/dist/jquery.min.js?v=22.4.3.0"></script>
<style>
         .table.tableformat tr td {
            font-size: 8px !important;
            font-style: italic;
        } 
        .highcharts-tooltip span {
            height:auto;
            min-width:270px;            
            overflow:auto;
            white-space:normal !important; 
            background-color:white;
            opacity: 1 !important;                 
        } 
        .highslide-header {
            height: 27px !important;
        }
        .highcharts-legend span {
            font-size: 12px !important;
        }
        .highcharts-title {
            fill: #434348;
            font-size: 12px !important ;
            /*font-weight: bold;*/
            /*font-family: 'Courier New', monospace;*/  
        }

        .highcharts-tooltip, .highcharts-tooltip text {
            font-size:12px !important;
        }

        .highcharts-subtitle {
            /*font-family: 'Courier New', monospace;*/    
            height:20px !important ;
            fill: #7cb5ec;
        }
        table.tokensummary {
          /*border: 1px solid #1C6EA4;*/
          background-color: #EEEEEE;          
          width: 100%;
          /*text-align: left;*/
          border-collapse: collapse;
        }
        table.tokensummary td {
            padding:5px;
            font-size:11px;
        }
        table.tokensummary th {
            padding:5px;
            font-size:11px;
        }
        img.cssimgicon {
            width:13px;
            border-radius: 8px;
            margin-top:-5px !important;
            padding-right:2px;
        }

        .tableformat {
            font-size: 12px !important;
        }

        body.dark-mode #containerchart1 .highcharts-yaxis-grid .highcharts-grid-line, 
        body.dark-mode #containerchart2a .highcharts-yaxis-grid .highcharts-grid-line, 
        body.dark-mode #containerchart2b .highcharts-yaxis-grid .highcharts-grid-line {
            stroke: #013558 !important
        }
        
    </style>
<script src="/assets/highstocks-new/js/highstock.js?v=22.4.3.0"></script>
<script src="/assets/highcharts-new/js/highcharts-more.js?v=22.4.3.0"></script>
<script src="/assets/highcharts-module/js/annotations.js?v=22.4.3.0"></script>
<script src="/assets/highslide/highslide-full.min.js?v=22.4.3.0"></script>
<script src="/assets/highslide/highslide.config.js?v=22.4.3.0" charset="utf-8"></script>
<link rel="stylesheet" type="text/css" href="/assets/highslide/highslide.css?v=22.4.3.0" />
<script type="text/javascript">    
        var tokenname = 'KaraStar UMY';
        var tokensymbol = 'UMY';
        var tokenimage = '';

        var contractAddress = '0x0522ecfe37ab2bdb5d60a99e08d1e8379bd35c00';
        var address = '0x0b5ebf9bab9b796e9408a8222efa4fbab625313f';
        var current_usd_eth_value = 401.76;
        var chartHeight = 500;

        var plotData = eval([]);
        var plotData_datemax = '';
        
        var plotData2ab = eval([[Date.UTC(2021,11,11),225,0,225,0,64,24605,0,24605],[Date.UTC(2021,11,12),178,0,178,0,87,45680,0,21075],[Date.UTC(2021,11,13),213,0,213,0,74,59765,0,14085],[Date.UTC(2021,11,14),637,0,637,0,149,74765,0,15000],[Date.UTC(2021,11,15),577,0,577,0,150,103925,0,29160],[Date.UTC(2021,11,16),802,0,802,0,193,163965,0,60040],[Date.UTC(2021,11,17),687,0,687,0,200,529810.09864,0,365845.09864],[Date.UTC(2021,11,18),618,0,618,0,206,627020.09864,0,97210],[Date.UTC(2021,11,19),482,0,482,0,205,742119.877181,0,115099.778541],[Date.UTC(2021,11,20),704,0,704,0,226,816189.877181,0,74070],[Date.UTC(2021,11,21),586,0,586,0,230,912504.877181,0,96315],[Date.UTC(2021,11,22),805,0,805,0,323,1074809.877181,0,162305],[Date.UTC(2021,11,23),909,0,909,0,443,1322459.388426,0,247649.511245],[Date.UTC(2021,11,24),1042,0,1042,0,529,1521954.388426,0,199495],[Date.UTC(2021,11,25),550,0,550,0,204,1614084.388426,0,92130],[Date.UTC(2021,11,26),563,1,562,1,175,1657334.388426,34800,78050],[Date.UTC(2021,11,27),842,0,842,0,301,1848369.388426,0,191035],[Date.UTC(2021,11,28),692,0,692,0,345,2027809.388426,0,179440],[Date.UTC(2021,11,29),1231,0,1231,0,611,2335884.388426,0,308075],[Date.UTC(2021,11,30),817,0,817,0,418,2518644.388426,0,182760],[Date.UTC(2021,11,31),757,0,757,0,343,2703849.388426,0,185205],[Date.UTC(2022,0,1),764,1,763,1,215,1004884.388426,1823000,124035],[Date.UTC(2022,0,2),1922,0,1922,0,982,1648584.388426,0,643700],[Date.UTC(2022,0,3),1403,0,1403,0,644,2083814.388426,0,435230],[Date.UTC(2022,0,4),1086,0,1086,0,697,2357379.388426,0,273565],[Date.UTC(2022,0,5),1090,0,1090,0,624,2699719.388426,0,342340],[Date.UTC(2022,0,6),1054,0,1054,0,442,3021389.388426,0,321670],[Date.UTC(2022,0,7),494,0,494,0,209,3159784.388426,0,138395],[Date.UTC(2022,0,8),718,0,718,0,233,3345464.388426,0,185680],[Date.UTC(2022,0,9),822,0,822,0,321,3549594.388426,0,204130],[Date.UTC(2022,0,10),792,0,792,0,358,3733274.388426,0,183680],[Date.UTC(2022,0,11),986,0,986,0,395,4000314.388426,0,267040],[Date.UTC(2022,0,12),853,0,853,0,310,4220144.388426,0,219830],[Date.UTC(2022,0,13),728,1,727,1,263,4402319.388426,35800,217975],[Date.UTC(2022,0,14),1693,0,1693,0,828,5087399.388426,0,685080],[Date.UTC(2022,0,15),2569,0,2569,0,1252,6310899.388426,0,1223500],[Date.UTC(2022,0,16),2316,1,2315,1,959,7322664.388426,3600,1015365],[Date.UTC(2022,0,17),1929,0,1929,0,758,8167564.388426,0,844900],[Date.UTC(2022,0,18),477,0,477,0,110,8274804.388426,0,107240],[Date.UTC(2022,0,19),417,0,417,0,125,8402264.388426,0,127460],[Date.UTC(2022,0,20),750,0,750,0,159,8543004.388426,0,140740],[Date.UTC(2022,0,21),909,0,909,0,157,8622794.388426,0,79790],[Date.UTC(2022,0,22),990,0,990,0,216,8790879.388426,0,168085],[Date.UTC(2022,0,23),485,0,485,0,126,8880389.388426,0,89510],[Date.UTC(2022,0,24),408,0,408,0,160,8974964.388426,0,94575],[Date.UTC(2022,0,25),471,0,471,0,111,9047099.388426,0,72135],[Date.UTC(2022,0,26),351,0,351,0,115,9113259.388426,0,66160],[Date.UTC(2022,0,27),378,0,378,0,91,12695634.388426,0,3582375],[Date.UTC(2022,0,28),368,0,368,0,86,12766574.388426,0,70940],[Date.UTC(2022,0,29),424,0,424,0,90,12810639.388426,0,44065],[Date.UTC(2022,0,30),329,0,329,0,74,12867599.388426,0,56960],[Date.UTC(2022,0,31),386,0,386,0,73,12914369.388426,0,46770],[Date.UTC(2022,1,1),488,2,486,2,102,2413026.388426,10556813,55470],[Date.UTC(2022,1,2),1157,0,1157,0,153,2497711.388426,0,84685],[Date.UTC(2022,1,3),791,0,791,0,125,2557981.388426,0,60270],[Date.UTC(2022,1,4),827,0,827,0,156,2719461.388426,0,161480],[Date.UTC(2022,1,5),406,0,406,0,95,2781456.388426,0,61995],[Date.UTC(2022,1,6),522,0,522,0,93,2842816.388426,0,61360],[Date.UTC(2022,1,7),509,0,509,0,92,2914211.388426,0,71395],[Date.UTC(2022,1,8),530,0,530,0,94,2971876.388426,0,57665],[Date.UTC(2022,1,9),468,0,468,0,89,3031531.388426,0,59655],[Date.UTC(2022,1,10),741,0,741,0,149,3140956.388426,0,109425],[Date.UTC(2022,1,11),736,0,736,0,124,3273236.388426,0,132280],[Date.UTC(2022,1,12),375,0,375,0,129,3370611.388426,0,97375],[Date.UTC(2022,1,13),420,0,420,0,97,3471566.388426,0,100955],[Date.UTC(2022,1,14),388,0,388,0,88,3561851.388426,0,90285],[Date.UTC(2022,1,15),438,0,438,0,124,3719546.388426,0,157695],[Date.UTC(2022,1,16),561,0,561,0,130,3863526.388426,0,143980],[Date.UTC(2022,1,17),711,0,711,0,270,4194961.388426,0,331435],[Date.UTC(2022,1,18),698,0,698,0,263,4563151.388426,0,368190],[Date.UTC(2022,1,19),333,0,333,0,75,4627321.388426,0,64170],[Date.UTC(2022,1,20),424,0,424,0,80,4773311.388426,0,145990],[Date.UTC(2022,1,21),293,0,293,0,82,4858906.388426,0,85595],[Date.UTC(2022,1,22),289,0,289,0,54,4901916.388426,0,43010],[Date.UTC(2022,1,23),458,0,458,0,143,5099031.388426,0,197115],[Date.UTC(2022,1,24),245,0,245,0,68,5161266.388426,0,62235],[Date.UTC(2022,1,25),716,0,716,0,268,5575631.388426,0,414365],[Date.UTC(2022,1,26),638,0,638,0,212,5855886.388426,0,280255],[Date.UTC(2022,1,27),845,0,845,0,228,6272101.388426,0,416215],[Date.UTC(2022,1,28),676,0,676,0,131,6477206.388426,0,205105],[Date.UTC(2022,2,1),785,2,783,2,271,3461338.888426,3489462.5,473595],[Date.UTC(2022,2,2),437,0,437,0,93,3612393.888426,0,151055],[Date.UTC(2022,2,3),216,0,216,0,56,3688793.888426,0,76400],[Date.UTC(2022,2,4),2017,0,2017,0,352,4016793.888426,0,328000],[Date.UTC(2022,2,5),2581,0,2581,0,448,4144678.888426,0,127885],[Date.UTC(2022,2,6),873,0,873,0,185,4222593.888426,0,77915],[Date.UTC(2022,2,7),821,0,821,0,164,4307488.888426,0,84895],[Date.UTC(2022,2,8),766,0,766,0,197,4379878.888426,0,72390],[Date.UTC(2022,2,9),501,0,501,0,105,4490518.888426,0,110640],[Date.UTC(2022,2,10),337,0,337,0,78,4566168.888426,0,75650],[Date.UTC(2022,2,11),439,0,439,0,67,4615708.888426,0,49540],[Date.UTC(2022,2,12),358,0,358,0,65,4693813.888426,0,78105],[Date.UTC(2022,2,13),289,0,289,0,59,4744813.888426,0,51000],[Date.UTC(2022,2,14),616,0,616,0,73,5067173.888426,0,322360],[Date.UTC(2022,2,15),189,0,189,0,51,5107698.888426,0,40525],[Date.UTC(2022,2,16),237,0,237,0,57,5153748.888426,0,46050],[Date.UTC(2022,2,17),347,0,347,0,81,5213868.888426,0,60120],[Date.UTC(2022,2,18),175,0,175,0,35,5277368.888426,0,63500],[Date.UTC(2022,2,19),305,0,305,0,39,5473528.888426,0,196160],[Date.UTC(2022,2,20),307,0,307,0,55,5513573.888426,0,40045],[Date.UTC(2022,2,21),458,0,458,0,226,5835103.888426,0,321530],[Date.UTC(2022,2,22),722,0,722,0,342,6391218.888426,0,556115],[Date.UTC(2022,2,23),622,1,621,1,225,5768038.888426,1000000,376820],[Date.UTC(2022,2,24),553,0,553,0,169,6031238.888426,0,263200],[Date.UTC(2022,2,25),1340,0,1340,0,380,6743208.888426,0,711970],[Date.UTC(2022,2,26),918,0,918,0,196,7113798.888426,0,370590],[Date.UTC(2022,2,27),1009,0,1009,0,190,7683578.888426,0,569780],[Date.UTC(2022,2,28),978,0,978,0,392,8441358.888426,0,757780],[Date.UTC(2022,2,29),754,0,754,0,183,8875043.888426,0,433685],[Date.UTC(2022,2,30),406,0,406,0,46,8983283.888426,0,108240],[Date.UTC(2022,2,31),142,0,142,0,26,9017008.888426,0,33725],[Date.UTC(2022,3,1),99,0,99,0,23,9023853.888426,0,6845],[Date.UTC(2022,3,2),304,2,302,2,33,3057144.888426,5984879,18170],[Date.UTC(2022,3,3),128,0,128,0,29,3074459.888426,0,17315],[Date.UTC(2022,3,4),223,0,223,0,36,3095539.888426,0,21080],[Date.UTC(2022,3,5),90,0,90,0,18,3100474.888426,0,4935],[Date.UTC(2022,3,6),106,0,106,0,21,3110579.888426,0,10105],[Date.UTC(2022,3,7),421,0,421,0,17,3152264.888426,0,41685],[Date.UTC(2022,3,8),199,0,199,0,17,3178119.888426,0,25855],[Date.UTC(2022,3,9),74,0,74,0,12,3189439.888426,0,11320],[Date.UTC(2022,3,10),177,0,177,0,14,3206304.888426,0,16865],[Date.UTC(2022,3,11),218,0,218,0,12,3222124.888426,0,15820],[Date.UTC(2022,3,12),308,0,308,0,17,3252629.888426,0,30505],[Date.UTC(2022,3,13),457,0,457,0,12,3288769.888426,0,36140],[Date.UTC(2022,3,14),439,0,439,0,12,3328404.888426,0,39635],[Date.UTC(2022,3,15),477,0,477,0,14,3371604.888426,0,43200],[Date.UTC(2022,3,16),142,0,142,0,21,3389464.888426,0,17860],[Date.UTC(2022,3,17),35,0,35,0,6,3403669.888426,0,14205],[Date.UTC(2022,3,18),275,0,275,0,8,3440789.888426,0,37120],[Date.UTC(2022,3,19),333,0,333,0,12,3467424.888426,0,26635],[Date.UTC(2022,3,20),280,0,280,0,13,3508704.888426,0,41280],[Date.UTC(2022,3,21),390,0,390,0,10,3552594.888426,0,43890],[Date.UTC(2022,3,22),77,0,77,0,13,3559329.888426,0,6735],[Date.UTC(2022,3,23),22,0,22,0,4,3562109.888426,0,2780],[Date.UTC(2022,3,24),238,0,238,0,9,3631089.888426,0,68980],[Date.UTC(2022,3,25),232,0,232,0,10,3671279.888426,0,40190],[Date.UTC(2022,3,26),159,0,159,0,12,3699259.888426,0,27980],[Date.UTC(2022,3,27),13,0,13,0,5,3703749.888426,0,4490],[Date.UTC(2022,3,28),69,0,69,0,5,3714124.888426,0,10375],[Date.UTC(2022,3,29),38,0,38,0,9,3718674.888426,0,4550],[Date.UTC(2022,3,30),26,0,26,0,6,3721404.888426,0,2730],[Date.UTC(2022,4,1),9,0,9,0,3,3722199.888426,0,795],[Date.UTC(2022,4,2),23,0,23,0,4,3724694.888426,0,2495],[Date.UTC(2022,4,3),53,0,53,0,4,3731214.888426,0,6520],[Date.UTC(2022,4,4),21,0,21,0,7,3733894.888426,0,2680],]);    
        var plotData2ab_datemax = Date.UTC(2022,4,4);

        var strnodatatxt = "<span class='d-block text-center py-5'>No data points found for the current time series.<br>Note: Chart data is updated daily, you may try checking back later</div></span>";
        var currencySymbol = 'USD';
             
        $(document).ready(function () {     
             
                generateChart_2a();
                generateChart_2b();
                generateChart_2c();
            
        });  
          
        //Token Transfers Time Series Chart for a specific address
        function generateChart_2a() {    
            $("#container_2a").attr("style", "display:visible;");
            $("#containerchart2a").attr("style", "display:visible;");
            var seriesNameConverter = {
                'Series_1': 'Total Transfers',
                'Series_2': 'Outbound Transfers Count',
                'Series_3': 'Inbound Transfers Count',
                'Series_4': 'Unique Address Sent',
                'Series_5': 'Unique Address Received'
            };
            var chart;
            chart = new Highcharts.chart({
                chart: {
                    renderTo: 'containerchart2a',
                    zoomType: 'x',
                    height: chartHeight
                },
                navigator: {
                    enabled: true
                },
                rangeSelector: {
                    buttons: [{
                        type: 'month',
                        count: 1,
                        text: '1m'
                    }, {
                        type: 'month',
                        count: 6,
                        text: '6m'
                    }, {
                        type: 'year',
                        count: 1,
                        text: '1y'
                    }, {
                        type: 'all',
                        text: 'All'
                    }],
                    selected: 4,
                    enabled: true
                },
                title: {
                    text: tokensymbol + ' Token Transfers for 0x0b5ebf9bab9b796e9408a8222efa4fbab625313f'
                },
                subtitle: {
                    text: 'Source: BscScan.com'
                },
                xAxis: {
                    //gridLineWidth: 1,
                    //top: 11,
                    type: 'datetime',
                    crosshair: {
                        width: 2,                        
                    },
                    max: plotData2ab_datemax
                },
                yAxis: [{
                    //-Total Transfers
                    title: {
                        text: 'Transfer Counts'
                    },
                    min: 0,
                    resize: {
                        enabled: true
                    },
                    opposite: false,
                    showEmpty: false                    
                }, {
                    //-Outbound Transfers Count
                    resize: {
                        enabled: true
                    },
                    title: {
                        text: ''
                    },
                    min: 0,
                    //linkedTo: 1,
                    showEmpty: false,
                    opposite: true
                }, {
                    //-Inbound Transfers
                    //visible: false,
                    //linkedTo: 0,
                    showEmpty: false,
                    min: 0,
                    opposite: true,
                    title: {
                        text: ''
                    }
                }, {
                    //-Unqiue Addr Sent
                    resize: {
                        enabled: true
                    },
                    min: 0,
                    title: {
                        text: 'Unique Counts'
                    },
                    opposite: true,
                    //linkedTo: 1,
                    showEmpty: false
                    //tickInterval: 1
                }, {
                    //-Unqiue Addr Received
                    resize: {
                        enabled: true
                    },
                    min: 0,
                    opposite: true,
                    //linkedTo: 1,
                    showEmpty: false
                }
                ],
                plotOptions: {
                    series: {
                        animation: {
                            duration: 0
                        },
                        turboThreshold: 10000,
                        //cursor: 'pointer',
                        point: {
                            
                        },
                        marker: {
                            lineWidth: 1
                        }
                    }
                },
                credits: {
                    enabled: false
                },
                legend: {
                    enabled: true,
                    labelFormatter: function () {
                         return seriesNameConverter[this.name];
                    },
                    //itemStyle: {
                    //    color: '#000000',
                    //    fontWeight: 'bold'
                    //}
                },
                tooltip: {
                    hideDelay: 0,
                    crosshairs: true,
                    //split: false,
                    useHTML: true,
                    shared: true,
                    shadow: true,
                    split: false,
                    backgroundColor: 'white',
                    formatter: function () {
                        var s;
                        var points = this.points;
                        var pointsLength = points.length;
                        s = '<table class="tableformat" style="border: 0px;" width="100%"><tr><td colspan=2 style="padding-bottom:5px;"><span style="font-size: 10px;"> ' + Highcharts.dateFormat('%a %e, %B %Y', new Date(points[0].key)) + '</span><br></td></tr>'
                        for (index = 0; index < pointsLength; index += 1) {
                            //var pointData;
                            //pointData = plotData.find(row => row[0] === this.points[index].x);
                            s += '<tr><td style="padding-top:4px;padding-bottom:4px;border-top:1px solid #D5D8DC;" valign="top"><span style="color:' + points[index].series.color + ';font-size: 15px !important;">\u25A0</span> ' + seriesNameConverter[points[index].series.name] + '</td>' +
                                '<td align="right" valign="top" style="padding-top:5px;padding-bottom:4px;border-top:1px solid #D5D8DC;"><span style=""><b>' +
                                points[index].y +
                                '</b></td></tr>' ;                            
                        }                        
                        s += '</table>';
                        return s;
                    },

                },
                series: [{
                    name: 'Series_1',  //Total token Transfers
                    type: 'column',
                    keys: ['x', 'y'],
                    data: plotData2ab,
                    pointWidth: 5,
                    tooltip: {
                        pointFormatter: function () {
                            var text;
                            var point = this;
                            text = '<br><span style="color:' + point.series.color + '">&#11044</span> ' + point.series.name + ': <b>' + this.y + '</b><br>';
                            return text;
                        }
                    }
                }, {
                    name: 'Series_2',   //Outbound Transfers count
                    type: 'line',
                    //yAxis: 1,
                    keys: ['x', 'a', 'y'],
                    data: plotData2ab
                }, {
                    name: 'Series_3',   //Inbound Transfers count
                    type: 'line',
                    keys: ['x', 'a', 'b', 'y'],
                    //yAxis: 1,
                    visible: true,
                    data: plotData2ab
                }, {
                    name: 'Series_4',  //Unique Address SentTo count
                    type: 'line',
                    keys: ['x', 'a', 'b', 'c', 'y'],
                    visible: true,
                    yAxis: 1,
                    data: plotData2ab
                }, {
                    name: 'Series_5', //Unique Address ReceivedFrom count
                    type: 'line',
                    keys: ['x', 'a', 'b', 'c', 'd', 'y'],
                    visible: true,
                    yAxis: 1,
                    data: plotData2ab
                }
                ]
            }, function (chart) { // on complete
                var point = chart.series[0].points[0];                                
                if (typeof point == 'undefined') {

                    $("#container_2a").attr("style", "display:none;");
                    $("#containerchart2a").attr("style", "display:none;");                      
                    document.getElementById("tab2_default_content").innerHTML = strnodatatxt
                }                
            }
            )
            $("#addressdisplay_2a").text(formatDate(chart.xAxis[0].getExtremes().dataMin) + " - " + formatDate(chart.xAxis[0].getExtremes().dataMax));            
        }
        //- End ------------------------

        //Token Balance Time Series Chart for a specific address
        function generateChart_2b() {    
            $("#container_2b").attr("style", "display:visible;");
            $("#containerchart2b").attr("style", "display:visible;");
            var seriesNameConverter = {
                'Series_1': 'Token Balance'                
            };
            var chart;
            chart = new Highcharts.chart({
                chart: {
                    renderTo: 'containerchart2b',
                    zoomType: 'x',
                    height: chartHeight
                },
                navigator: {
                    enabled: true
                },
                rangeSelector: {
                    buttons: [{
                        type: 'month',
                        count: 1,
                        text: '1m'
                    }, {
                        type: 'month',
                        count: 6,
                        text: '6m'
                    }, {
                        type: 'year',
                        count: 1,
                        text: '1y'
                    }, {
                        type: 'all',
                        text: 'All'
                    }],
                    selected: 4,
                    enabled: true
                },
                title: {
                    text: tokensymbol + ' Token Balance for 0x0b5ebf9bab9b796e9408a8222efa4fbab625313f'
                },
                subtitle: {
                    text: 'Source: BscScan.com'
                },
                xAxis: {
                    //gridLineWidth: 1,
                    //top: 11,
                    type: 'datetime',
                    crosshair: {
                        width: 2,                        
                    },
                    max: plotData2ab_datemax
                },
                yAxis: [{
                    //-Total Balance
                    title: {
                        text: 'Token Balance'
                    },
                    resize: {
                        enabled: true
                    },
                    opposite: false,
                    showEmpty: false,
                }, {
                    //-Token Price
                    resize: {
                        enabled: true
                    },
                    title: {
                        text: 'Token Price'
                    },
                    showEmpty: false,
                    opposite: true,
                }
                ],
                plotOptions: {
                    series: {
                        animation: {
                            duration: 0
                        },
                        turboThreshold: 10000,
                        //cursor: 'pointer',
                        point: {
                            
                        },
                        marker: {
                            lineWidth: 1
                        }
                    }
                },
                credits: {
                    enabled: false
                },
                legend: {
                    enabled: true,
                    labelFormatter: function () {
                         return seriesNameConverter[this.name];
                    },
                },
                tooltip: {
                    hideDelay: 0,
                    crosshairs: true,
                    useHTML: true,
                    shared: true,
                    shadow: true,
                    split: false,
                    backgroundColor: 'white',
                    formatter: function () {
                        var s;
                        var points = this.points;
                        var pointsLength = points.length;
                        s = '<table class="tableformat" style="border: 0px;" width="100%"><tr><td colspan=2 style="padding-bottom:5px;"><span style="font-size: 10px;"> ' + Highcharts.dateFormat('%a %e, %B %Y', new Date(points[0].key)) + '</span><br></td></tr>'
                        for (index = 0; index < pointsLength; index += 1) {
                            //var pointData;
                            //pointData = plotData.find(row => row[0] === this.points[index].x);
                            s += '<tr><td style="padding-top:4px;padding-bottom:4px;border-top:1px solid #D5D8DC;" valign="top"><span style="color:' + points[index].series.color + ';font-size: 15px !important;">\u25A0</span> ' + seriesNameConverter[points[index].series.name] + '</td>' +
                                '<td align="right" valign="top" style="padding-top:5px;padding-bottom:4px;border-top:1px solid #D5D8DC;"><span style=""><b>' +
                                points[index].y +
                                '</b></td></tr>' ;                            
                        }                        
                        s += '</table>';
                        return s;
                    },

                },
                series: [{
                    name: 'Series_1',  //Token Balance
                    type: 'line',
                    keys: ['x', 'a', 'b', 'c', 'd', 'e','y'],
                    data: plotData2ab,
                    pointWidth: 5,
                    tooltip: {
                        pointFormatter: function () {
                            var text;
                            var point = this;
                            text = '<br><span style="color:' + point.series.color + '">&#11044</span> ' + point.series.name + ': <b>' + this.y + '</b><br>';
                            return text;
                        }
                    }
                }
                ]
            }, function (chart) { // on complete
                var point = chart.series[0].points[0];                                
                if (typeof point == 'undefined') {

                    $("#container_2b").attr("style", "display:none;");
                    $("#containerchart2b").attr("style", "display:none;");                      
                    document.getElementById("tab3_default_content").innerHTML = strnodatatxt
                }                
            }
            )
            $("#addressdisplay_2b").text(formatDate(chart.xAxis[0].getExtremes().dataMin) + " - " + formatDate(chart.xAxis[0].getExtremes().dataMax));            
        }
        //- End ------------------------

        //Token Balance Time Series Chart for a specific address
        function generateChart_2c() {
            $("#container_2c").attr("style", "display:visible;");
            $("#containerchart2c").attr("style", "display:visible;");
            var seriesNameConverter = {
                'Series_1': 'Sent (Out)',
                'Series_2': 'Receive (In)'
            };
            var chart;
            chart = new Highcharts.chart({
                chart: {
                    renderTo: 'containerchart2c',
                    zoomType: 'x',
                    height: chartHeight
                },
                navigator: {
                    enabled: true
                },
                rangeSelector: {
                    buttons: [{
                        type: 'month',
                        count: 1,
                        text: '1m'
                    }, {
                            type: 'month',
                            count: 6,
                            text: '6m'
                        }, {
                            type: 'year',
                            count: 1,
                            text: '1y'
                        }, {
                            type: 'all',
                            text: 'All'
                        }],
                    selected: 4,
                    enabled: true
                },
                title: {
                    text: tokensymbol + ' Token Transfers for 0x0b5ebf9bab9b796e9408a8222efa4fbab625313f'
                },
                subtitle: {
                    text: 'Source: BscScan.com'
                },
                xAxis: {
                    //gridLineWidth: 1,
                    //top: 11,
                    type: 'datetime',
                    crosshair: {
                        width: 2,
                    },
                    max: plotData2ab_datemax
                },
                yAxis: [{
                        //-Total Transfers
                        title: {
                            text: 'Transfer Amounts'
                        },
                        min: 0,
                        resize: {
                            enabled: true
                        },
                        opposite: false,
                        showEmpty: false
                    }, {
                        //-Outbound Transfers Count
                        resize: {
                            enabled: true
                        },
                        title: {
                            text: ''
                        },
                        min: 0,
                        //linkedTo: 1,
                        showEmpty: false,
                        opposite: true
                    }
                ],
                plotOptions: {
                    series: {
                        animation: {
                            duration: 0
                        },
                        turboThreshold: 10000,                        
                        point: {
                        },
                        marker: {
                            lineWidth: 1
                        }
                    }
                },
                credits: {
                    enabled: false
                },
                legend: {
                    enabled: true,
                    labelFormatter: function () {
                        return seriesNameConverter[this.name];
                    },
                },
                tooltip: {
                    hideDelay: 0,
                    crosshairs: true,
                    //split: false,
                    useHTML: true,
                    shared: true,
                    shadow: true,
                    split: false,
                    backgroundColor: 'white',
                    formatter: function () {
                        var s;
                        var points = this.points;
                        var pointsLength = points.length;
                        s = '<table class="tableformat" style="border: 0px;" width="100%"><tr><td colspan=2 style="padding-bottom:5px;"><span style="font-size: 10px;"> ' + Highcharts.dateFormat('%a %e, %B %Y', new Date(points[0].key)) + '</span><br></td></tr>'
                        for (index = 0; index < pointsLength; index += 1) {
                            //var pointData;
                            //pointData = plotData.find(row => row[0] === this.points[index].x);
                            s += '<tr><td style="padding-top:4px;padding-bottom:4px;border-top:1px solid #D5D8DC;" valign="top"><span style="color:' + points[index].series.color + ';font-size: 15px !important;">\u25A0</span> ' + seriesNameConverter[points[index].series.name] + '</td>' +
                                '<td align="right" valign="top" style="padding-top:5px;padding-bottom:4px;border-top:1px solid #D5D8DC;"><span style=""><b>' +
                                points[index].y +
                                '</b> ' + tokensymbol + '</td></tr>';
                        }
                        s += '</table>';
                        return s;
                    },

                },
                series: [{
                    name: 'Series_1',  //Total token Transfers
                    type: 'column',
                    keys: ['x', '1','2','3','4','5','6','y','7'],
                    data: plotData2ab
                }, {
                    name: 'Series_2',   //Outbound Transfers count
                    type: 'column',
                        keys: ['x', '1', '2', '3', '4', '5', '6', '7', 'y'],
                    data: plotData2ab
                }
                ]
            }, function (chart) { // on complete
                var point = chart.series[0].points[0];
                if (typeof point == 'undefined') {
                    $("#container_2c").attr("style", "display:none;");
                    $("#containerchart2c").attr("style", "display:none;");
                    document.getElementById("tab4_default_content").innerHTML = strnodatatxt
                }
            }
            )
               $("#addressdisplay_2c").text(formatDate(chart.xAxis[0].getExtremes().dataMin) + " - " + formatDate(chart.xAxis[0].getExtremes().dataMax));
           }
        //- End ------------------------

          
    </script>
<script async src='/cdn-cgi/challenge-platform/h/g/scripts/invisible.js?ts=1651730400'></script></head>
<body id="body">
<style>
        #overlay {
            background: #ffffff;
            color: #666666;
            position: fixed;
            height: 100%;
            width: 100%;
            z-index: 5000;
            top: 0;
            left: 0;
            float: left;
            text-align: center;
            padding-top: 10px;
        }
    </style>
<script>window.parent.isFrameLoading = true;</script>
<ul class="nav nav-pills nav-pills-secondary mb-2" id="nav_tabs" role="tablist">
<li id="li_tab3" class="nav-item">
<a class="nav-link active show" href="#tab3" data-toggle="tab">
Token Balance</a></li>
<li id="li_tab4" class="nav-item">
<a class="nav-link" href="#tab4" data-toggle="tab">
Token Transfer Amounts<sup><span class="badge badge-success ml-1"> New</span></sup></a></li>
<li id="li_tab2" class="nav-item">
<a class="nav-link" href="#tab2" data-toggle="tab">
Token Transfer Counts</a></li>
</ul>
<div class="tab-content card border p-3 mb-4">
<div class="tab-pane fade" id="tab2" role="tabpanel" aria-labelledby="tab2-tab">
<span id="tab2_default_content"></span>
<div style="display: none" id="container_2a">
<div class="d-md-flex justify-content-between align-items-center mb-3">
<h4 class="h6 mb-1 mb-md-0">Time Series: Token Transfer Count for User Address</h4>
<div class="text-secondary">
<span id="addressdisplay_2a"></span>
</div>
</div>
<hr class="my-0">
<div class="mt-3">
<div class="content" id="containerchart2a" style="height: 565px; min-width: 300px; display: none"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="tab4" role="tabpanel" aria-labelledby="tab4-tab">
<span id="tab4_default_content"></span>
<div style="display: none" id="container_2c">
<div class="d-md-flex justify-content-between align-items-center mb-3">
<h4 class="h6 mb-1 mb-md-0">Time Series: Token Transfer Amounts for User Address</h4>
<div class="text-secondary">
<span id="addressdisplay_2c"></span>
</div>
</div>
<hr class="my-0">
<div class="mt-3">
<div class="content" id="containerchart2c" style="height: 565px; min-width: 300px; display: none"></div>
</div>
</div>
</div>
<div class="tab-pane fade active show" id="tab3" role="tabpanel" aria-labelledby="tab3-tab">
<span id="tab3_default_content"></span>
<div style="display: none" id="container_2b">
<div class="d-md-flex justify-content-between align-items-center mb-3">
<h4 class="h6 mb-1 mb-md-0">Time Series: Token Balance for User Address</h4>
<div class="text-secondary">
<span id="addressdisplay_2b"></span>
</div>
</div>
<hr class="my-0">
<div class="mt-3">
<div class="content" id="containerchart2b" style="height: 565px; min-width: 300px; display: none"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="tokenChart" role="tabpanel" aria-labelledby="tokenChart-tab">
<div id="loadingtxframe3">
<div id="overlay3" class="py-3 text-center">
<img src="/images/main/loadingblock.svg" alt="Loading" />
</div>
</div>
<div class="table-responsive" style="overflow: auto; -webkit-overflow-scrolling: touch; visibility:hidden;">
<iframe width="100%" id="tokenchartiframe" src="" frameborder="0" scrolling="yes" style="height: 510px; min-width: 300px;"></iframe>
</div>
</div>
</div>
<script src="/assets/vendor/bootstrap/bootstrap.min.js?v=22.4.3.0"></script>
<script type="text/javascript">(function(){window['__CF$cv$params']={r:'70674eb91ad6969f',m:'q8k7Z1AqT1AeDPV.e41P3o_6xVtWeGeGZQ_nBX_CA8U-1651730968-0-AQawZ6STz5wEgL4ODWdI21q9UVVXPCM4Y3/2fSvmAvClwaNYViGyGJtkHWFTdGm1B4Tm3ipZDAvhZc+6GSalsLpA4+b3rFHsVOg1LzB+1G/aXVEPDo28f5f/EDIcuHsuXQXbzlVqzaqTPlSDOJtiH1KR31KYjGgS8dnBqUt3rOHKPwzHLI5soT56Rngvr3Ev24uagvQ5MdGRvokSESAC5rwbFkD5bOmhJjGWt/Ugf6qQumXCugCbx5b0dVtDfldFE/kiCkU16eNQ8S2TvRCeLDWME8Texk+wZ+zzsFzAvKzu',s:[0xf696109540,0xb891642275],u:'/cdn-cgi/challenge-platform/h/g'}})();</script></body>
<script type="text/javascript"> 
    $(window).on('load', function () {
        $('#overlay').fadeOut();
        window.parent.document.getElementById('loadinganalyticframe').style.display = "none";

        setTimeout(function () {
            var obj = window.parent.document.getElementById('token_analytics_pageiframe');
            parent.resizeIframe(obj, -20);
        }, 300);

        window.parent.isFrameLoading = false;
        window.parent.token_analytics_loaded = true;
        window.parent.document.getElementById('overlayMain').style.display = 'none';
           
    });

    if ("ontouchstart" in document.documentElement) {
        $('html').addClass('touch');
    };

    //- common functions go here -
    function formatDate(dtTimeStamp) {
        var date = new Date(dtTimeStamp)
        var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"];
        var dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();
        return dayNames[date.getDay()] + ' ' + day + ', ' + monthNames[monthIndex] + ' ' + year;
    };
    function addCommas(nStr) {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    };
    function gettokeninfo(dtTimestamp, address) {
        var results;
        $.ajax({
            //dataType: "json",
            type: 'Get',
            url: '/analyticsHandler.ashx?t=t',
            //async: false,
            data: { dt: dtTimestamp, address: address },
            success: function (data) {
                //console.log("Success| " + data);
                results = data;
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Error| " + textStatus);
            }
        });
        return results;
    };

    //Start Add Chart Tab
    window.tokenChartLoaded = false;

    var hash = window.parent.location.hash.substring(1);
    window.mode = 'normal';

    function activaTab(tab) {            
        updatehash(hash);
            
        $('.nav_tabs1 a[href="#tokenAnalytics"]').tab('show');
        $('.nav-pills li a[href="#' + tab + '"]').tab('show');      
    };

    function updatehash(strhash) {
        if (strhash == '') {
            var baseUrl = window.parent.location.href.split('#')[0];
            history.replaceState("", document.title, baseUrl);
        } else {
            var baseUrl = window.parent.location.href.split('#')[0];
            history.replaceState("", document.title, baseUrl + '#' + strhash);
        };
        window.parent.document.getElementById('overlayMain').style.display = 'none';
        return true;
    };
       
    function loadIframeSource1() {
        if (window.tokenChartLoaded == false) {
            window.tokenChartLoaded = true;
            document.getElementById('tokenchartiframe').src = '/token/tokenchart?m=' + window.mode + '&contractAddress=0x0522ecfe37ab2bdb5d60a99e08d1e8379bd35c00';
        };
    }; 

    function resizeIframe(obj, addwidth) {
    setTimeout(function () {
            obj.style.height = 0;
            obj.style.height = (obj.contentWindow.document.body.scrollHeight + addwidth) + 'px';
            obj.parentElement.style.visibility = 'visible';
        }, 300); 
    };

    $('#li_tokenChartTab').on('click', function () {
        $('#tokenChart').attr('style', 'display:visible;');           
        $('#tab3').attr('style', 'display:none;');
        $('#tab2').attr('style', 'display:none;');
        $('#tab1').attr('style', 'display:none;');

        var obj = window.parent.document.getElementById('token_analytics_pageiframe');
        parent.resizeIframe(obj, -20);
    });
    $('#li_tab3').on('click', function () {
        $('#tab3').attr('style', 'display:visible;');           
        $('#tokenChart').attr('style', 'display:none;');
        $('#tab2').attr('style', 'display:none;');
        $('#tab1').attr('style', 'display:none;');

        var obj = window.parent.document.getElementById('token_analytics_pageiframe');
        parent.resizeIframe(obj, -20);
    });
    $('#li_tab2').on('click', function () {
        $('#tab2').attr('style', 'display:visible;');           
        $('#tokenChart').attr('style', 'display:none;');
        $('#tab3').attr('style', 'display:none;');
        $('#tab1').attr('style', 'display:none;');

        var obj = window.parent.document.getElementById('token_analytics_pageiframe');
        parent.resizeIframe(obj, -20);
    });
    $('#li_tab1').on('click', function () {
        $('#tab1').attr('style', 'display:visible;');           
        $('#tokenChart').attr('style', 'display:none;');
        $('#tab3').attr('style', 'display:none;');
        $('#tab2').attr('style', 'display:none;');

        var obj = window.parent.document.getElementById('token_analytics_pageiframe');
        parent.resizeIframe(obj, -20);
    });
    //End Add Chart Tab

</script>
</html>
